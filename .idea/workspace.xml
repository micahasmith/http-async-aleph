<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="0168e8a2-78f0-478f-a2e0-2ab4009daab9" name="Default" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="project.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="319">
              <caret line="29" column="0" lean-forward="false" selection-start-line="29" selection-start-column="0" selection-end-line="29" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/http_async/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="737">
              <caret line="67" column="2" lean-forward="false" selection-start-line="67" selection-start-column="2" selection-end-line="67" selection-end-column="60" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="README.md" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/README.md">
          <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
            <state split_layout="SPLIT">
              <first_editor relative-caret-position="22">
                <caret line="2" column="0" lean-forward="true" selection-start-line="2" selection-start-column="0" selection-end-line="2" selection-end-column="0" />
                <folding />
              </first_editor>
              <second_editor />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/README.md" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/src/http_async/core.clj" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="6" fullScreen="true">
    <option name="x" value="1680" />
    <option name="y" value="-92" />
    <option name="width" value="1920" />
    <option name="height" value="1080" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="http-async" type="b2602c69:ProjectViewProjectNode" />
              <item name="http-async" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="http-async" type="b2602c69:ProjectViewProjectNode" />
              <item name="http-async" type="462c0819:PsiDirectoryNode" />
              <item name="doc" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="http-async" type="b2602c69:ProjectViewProjectNode" />
              <item name="http-async" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="http-async" type="b2602c69:ProjectViewProjectNode" />
              <item name="http-async" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="http_async" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="http-async" type="b2602c69:ProjectViewProjectNode" />
              <item name="http-async" type="462c0819:PsiDirectoryNode" />
              <item name="target" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="http-async" type="b2602c69:ProjectViewProjectNode" />
              <item name="http-async" type="462c0819:PsiDirectoryNode" />
              <item name="target" type="462c0819:PsiDirectoryNode" />
              <item name="default" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="http-async" type="b2602c69:ProjectViewProjectNode" />
              <item name="http-async" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="http-async" type="b2602c69:ProjectViewProjectNode" />
              <item name="http-async" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="http_async" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
      <pane id="Scratches" />
      <pane id="AndroidView" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="configurable.group.tools" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
  </component>
  <component name="ReplState" timestamp="1535110297661">{:repl-history {:ide [], :local [{:command &quot;(ns http-async.core\n  (:require\n    [ring.middleware.reload :refer [wrap-reload]]\n    [clojure.pprint :refer [pprint]])\n  (:use\n    [compojure.route :only [files not-found]]\n    [compojure.handler :only [site]] ; form, query params decode; cookie; session, etc\n    [compojure.core :only [defroutes GET POST DELETE ANY context]]\n    org.httpkit.server)\n  (:gen-class))&quot;, :offset 367, :ns &quot;http-async.core&quot;} {:command &quot;(defroutes app\n           (GET \&quot;/\&quot; [request] \n                (pprint request)\n                \&quot;hello world\&quot;))&quot;, :offset 110, :ns &quot;http-async.core&quot;} {:command &quot;(run-server (site reloadable-app) {:port 8080})&quot;, :offset 47, :ns &quot;http-async.core&quot;} {:command &quot;(run-server (site reloadable-app) {:port 8081})&quot;, :offset 47, :ns &quot;http-async.core&quot;} {:command &quot;(run-server (site reloadable-app) {:port 8082})&quot;, :offset 47, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]])\n  (:use\n    [ring.middleware.reload :only [wrap-reload]]\n    [compojure.route :only [files not-found]]\n    [compojure.handler :only [site]] ; form, query params decode; cookie; session, etc\n    [compojure.core :only [defroutes GET POST DELETE ANY context]]\n    org.httpkit.server)\n  (:gen-class))&quot;, :offset 366, :ns &quot;http-async.core&quot;} {:command &quot;(defroutes app\n           (GET \&quot;/\&quot; [request]\n                (pprint request)\n                \&quot;hello world\&quot;))&quot;, :offset 109, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n  (wrap-reload #'app))&quot;, :offset 42, :ns &quot;http-async.core&quot;} {:command &quot;(def live-server (run-server (site reloadable-app) {:port 8082}))&quot;, :offset 65, :ns &quot;http-async.core&quot;} {:command &quot;(def live-server (run-server (site reloadable-app) {:port 8083}))&quot;, :offset 65, :ns &quot;http-async.core&quot;} {:command &quot;(pprint live-server)&quot;, :offset 20, :ns &quot;http-async.core&quot;} {:command &quot;(def live-server (run-server #'app {:port 8084}))&quot;, :offset 49, :ns &quot;http-async.core&quot;} {:command &quot;(defroutes app\n           (GET \&quot;/\&quot; [request]\n                (pprint request)\n                \&quot;hello worldy\&quot;))&quot;, :offset 110, :ns &quot;http-async.core&quot;} {:command &quot;(live-server)&quot;, :offset 13, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :only [wrap-reload]]\n    [compojure.route :only [files not-found]]\n    [compojure.handler :only [site]] ; form, query params decode; cookie; session, etc\n    [compojure.core :only [defroutes GET POST DELETE ANY context]])\n  (:gen-class))&quot;, :offset 334, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :only [wrap-reload]]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [defroutes GET POST DELETE ANY context]]\n     [ring.middleware.params :as params])\n  (:gen-class))&quot;, :offset 400, :ns &quot;http-async.core&quot;} {:command &quot;(defroutes app\n           (GET \&quot;/\&quot; request\n                (pprint request)\n                \&quot;hello worldy\&quot;))&quot;, :offset 108, :ns &quot;http-async.core&quot;} {:command &quot;(d/deferred)&quot;, :offset 12, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :only [wrap-reload]]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [defroutes GET POST DELETE ANY context]]\n    [ring.middleware.params :as params]\n    [compojure.response :refer [Renderable]]\n    [aleph.http :as http]\n    [byte-streams :as bs]\n    [manifold.stream :as s]\n    [manifold.deferred :as d]\n    [clojure.core.async :as a])\n  (:gen-class))&quot;, :offset 585, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :refer [wrap-reload]]\n    [ring.middleware :refer [wrap-keyword-params]]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [defroutes GET POST DELETE ANY context]]\n    [ring.middleware.params :as params]\n    [compojure.response :refer [Renderable]]\n    [aleph.http :as http]\n    [byte-streams :as bs]\n    [manifold.stream :as s]\n    [manifold.deferred :as d]\n    [clojure.core.async :as a])\n  (:gen-class))&quot;, :offset 637, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :refer [wrap-reload]]\n    [ring.middleware.keyword-params :refer [wrap-keyword-params]]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [defroutes GET POST DELETE ANY context]]\n    [ring.middleware.params :as params]\n    [compojure.response :refer [Renderable]]\n    [aleph.http :as http]\n    [byte-streams :as bs]\n    [manifold.stream :as s]\n    [manifold.deferred :as d]\n    [clojure.core.async :as a])\n  (:gen-class))&quot;, :offset 652, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :refer [wrap-reload]]\n    [ring.middleware.keyword-params :refer [wrap-keyword-params]]\n    [ring.middleware.defaults :refer :all]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [defroutes GET POST DELETE ANY context]]\n    [ring.middleware.params :as params]\n    [compojure.response :refer [Renderable]]\n    [aleph.http :as http]\n    [byte-streams :as bs]\n    [manifold.stream :as s]\n    [manifold.deferred :as d]\n    [clojure.core.async :as a])\n  (:gen-class))&quot;, :offset 695, :ns &quot;http-async.core&quot;} {:command &quot;(defn -main\n  \&quot;I don't do a whole lot ... yet.\&quot;\n  [&amp; args]\n  (println \&quot;Hello, World!\&quot;))&quot;, :offset 87, :ns &quot;http-async.core&quot;} {:command &quot;(def hi :hi)&quot;, :offset 11, :ns &quot;http-async.core&quot;} {:command &quot;(quote hi)&quot;, :offset 9, :ns &quot;http-async.core&quot;} {:command &quot;(unquote hi)&quot;, :offset 11, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :refer [wrap-reload]]\n    [ring.middleware.keyword-params :refer [wrap-keyword-params]]\n    [ring.middleware.defaults :refer :all]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [routes GET POST DELETE ANY context]]\n    [ring.middleware.params :as params]\n    [compojure.response :refer [Renderable]]\n    [aleph.http :as http]\n    [byte-streams :as bs]\n    [manifold.stream :as s]\n    [manifold.deferred :as d]\n    [clojure.core.async :as a])\n  (:gen-class))&quot;, :offset 692, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-handler [request]\n  (pprint request)\n  \&quot;hello worldy\&quot;)&quot;, :offset 63, :ns &quot;http-async.core&quot;} {:command &quot;(def app-routes\n  (routes\n    (GET \&quot;/\&quot; ex-handler)))&quot;, :offset 52, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n  (wrap-reload #'(wrap-defaults app-routes\n                                ;; this is going to be behind a proxy (nginx)\n                                :proxy true\n                                ;; don't need a session\n                                :session false\n                                ;; don't need cookies\n                                :cookies false\n                                )))&quot;, :offset 424, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n  (wrap-reload #'(wrap-defaults app-routes\n                                (assoc site-defaults\n                                  ;; this is going to be behind a proxy (nginx)\n                                  :proxy true\n                                  ;; don't need a session\n                                  :session false\n                                  ;; don't need cookies\n                                  :cookies false)\n                                )))&quot;, :offset 490, :ns &quot;http-async.core&quot;} {:command &quot;(wrap-defaults app-routes\n                                (assoc site-defaults\n                                  ;; this is going to be behind a proxy (nginx)\n                                  :proxy true\n                                  ;; don't need a session\n                                  :session false\n                                  ;; don't need cookies\n                                  :cookies false)\n                                )&quot;, :offset 451, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n  (wrap-reload (wrap-defaults app-routes\n                                (assoc site-defaults\n                                  ;; this is going to be behind a proxy (nginx)\n                                  :proxy true\n                                  ;; don't need a session\n                                  :session false\n                                  ;; don't need cookies\n                                  :cookies false)\n                                )))&quot;, :offset 488, :ns &quot;http-async.core&quot;} {:command &quot;(def server (http/start-server #'reloadable-app {:port 8081}))&quot;, :offset 62, :ns &quot;http-async.core&quot;} {:command &quot;(def server (http/start-server #'reloadable-app {:port 8085}))&quot;, :offset 62, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n  (wrap-defaults app-routes\n                 (assoc site-defaults\n                   ;; this is going to be behind a proxy (nginx)\n                   :proxy true\n                   ;; don't need a session\n                   :session false\n                   ;; don't need cookies\n                   :cookies false)\n                 ))&quot;, :offset 354, :ns &quot;http-async.core&quot;} {:command &quot;(http/stop-server server)&quot;, :offset 25, :ns &quot;http-async.core&quot;} {:command &quot;(pprint server)&quot;, :offset 15, :ns &quot;http-async.core&quot;} {:command &quot;(server)&quot;, :offset 8, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-handler [request]\n  (pprint request)\n  {:status 200\n   :body\n           \&quot;hello worldy\&quot;})&quot;, :offset 97, :ns &quot;http-async.core&quot;} {:command &quot;(def app-routes\n  (routes\n    (GET \&quot;/\&quot; [] ex-handler)))&quot;, :offset 55, :ns &quot;http-async.core&quot;} {:command &quot;(def app-routes\n  (routes\n    (GET \&quot;/\&quot; [] ex-handler)\n    (route/not-found {:status 404})))&quot;, :offset 91, :ns &quot;http-async.core&quot;} {:command &quot;(def app-routes\n  (routes\n    (GET \&quot;/\&quot; [] ex-handler)\n    (not-found {:status 404})))&quot;, :offset 85, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n  app-routes\n  #_(wrap-defaults app-routes\n                 ;; https://github.com/ring-clojure/ring-defaults\n                 (assoc site-defaults\n                   ;; this is going to be behind a proxy (nginx)\n                   :proxy true\n                   ;; don't need a session\n                   :session false\n                   ;; don't need cookies\n                   :cookies false)\n                 ))&quot;, :offset 435, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-handler [request]\n  (pprint request)\n  {:status 200\n   :body\n           \&quot;hello worldyyy\&quot;})&quot;, :offset 99, :ns &quot;http-async.core&quot;} {:command &quot;(def server (http/start-server #'reloadable-app {:port 8086 :keep-alive? false}))&quot;, :offset 81, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-handler [request]\n  (pprint request)\n  {:status 200\n    :keep-alive? false\n   :body   \&quot;hello worldy\&quot;})&quot;, :offset 111, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n  ;app-routes\n  (wrap-defaults app-routes\n                   ;; https://github.com/ring-clojure/ring-defaults\n                   (assoc site-defaults\n                     ;; this is going to be behind a proxy (nginx)\n                     :proxy true\n                     ;; don't need a session\n                     :session false\n                     ;; don't need cookies\n                     :cookies false)\n                   ))&quot;, :offset 452, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-async-handler [request]\n  {:status 200\n   :body (go \&quot;hello world asyncyy\&quot;)})&quot;, :offset 85, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-async-handler [request]\n  {:status 200\n   :body (a/go \&quot;hello world asyncyy\&quot;)})&quot;, :offset 87, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-async-handler [request]\n  {:status 200\n   :body (s/-&gt;source (a/go \&quot;hello world asyncyy\&quot;))})&quot;, :offset 100, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-async-handler [request]\n  {:status 200\n   :headers {\&quot;content-type\&quot; \&quot;text/plain\&quot;}\n   :body (s/-&gt;source (a/go \&quot;hello world asyncyy\&quot;))})&quot;, :offset 142, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n  (wrap-defaults app-routes\n                   ;; https://github.com/ring-clojure/ring-defaults\n                   (assoc site-defaults\n                     ;; this is going to be behind a proxy (nginx)\n                     :proxy true\n                     ;; don't need a session\n                     :session false\n                     ;; don't need cookies\n                     :cookies false)\n                   ))&quot;, :offset 438, :ns &quot;http-async.core&quot;} {:command &quot;(def app-routes\n  (routes\n    (GET \&quot;/\&quot; [] ex-handler)\n    (GET \&quot;/async\&quot; [] ex-async-handler)\n    (not-found {:status 404})))&quot;, :offset 124, :ns &quot;http-async.core&quot;} {:command &quot;(extend-protocol Renderable\n  manifold.deferred.IDeferred\n  (render [d _] d))&quot;, :offset 77, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n  (wrap-keyword-params\n    (wrap-defaults app-routes\n                   ;; https://github.com/ring-clojure/ring-defaults\n                   (assoc site-defaults\n                     ;; this is going to be behind a proxy (nginx)\n                     :proxy true\n                     ;; don't need a session\n                     :session false\n                     ;; don't need cookies\n                     :cookies false)\n                   )))&quot;, :offset 464, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [request]\n  )&quot;, :offset 35, :ns &quot;http-async.core&quot;} {:command &quot;(def app-routes\n  (routes\n    (GET \&quot;/\&quot; [] ex-handler)\n    (GET \&quot;/async\&quot; [] ex-async-handler)\n    (POST \&quot;/json\&quot; [] ex-post-handler)\n    (not-found {:status 404})))&quot;, :offset 162, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n    (wrap-defaults app-routes\n                   ;; https://github.com/ring-clojure/ring-defaults\n                   (assoc site-defaults\n                     ;; this is going to be behind a proxy (nginx)\n                     :proxy true\n                     ;; don't need a session\n                     :session false\n                     ;; don't need cookies\n                     :cookies false\n                     :params {:keywordize true})\n                   ))&quot;, :offset 488, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [request]\n  (pprint request)\n  {:status 403})&quot;, :offset 67, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :refer [wrap-reload]]\n    [ring.middleware.keyword-params :refer [wrap-keyword-params]]\n    [ring.middleware.defaults :refer :all]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [routes GET POST DELETE ANY context]]\n    [ring.middleware.params :as params]\n    [compojure.response :refer [Renderable]]\n    [aleph.http :as http]\n    [byte-streams :as bs]\n    [manifold.stream :as s]\n    [manifold.deferred :as d]\n    [clojure.core.async :as a])\n  (:gen-class))\n\n(defn -main\n  \&quot;I don't do a whole lot ... yet.\&quot;\n  [&amp; args]\n  (println \&quot;Hello, World!\&quot;))\n\n(extend-protocol Renderable\n  manifold.deferred.IDeferred\n  (render [d _] d))\n\n(defn ex-handler [request]\n  (pprint request)\n  {:status      200\n   :body        \&quot;hello worldy\&quot;})\n\n(defn ex-async-handler [request]\n  {:status 200\n   :headers {\&quot;content-type\&quot; \&quot;text/plain\&quot;}\n   :body (s/-&gt;source (a/go \&quot;hello world asyncyy\&quot;))})\n\n(defn ex-post-handler [request]\n  (pprint request)\n  {:status 403})\n\n(def app-routes\n  (routes\n    (GET \&quot;/\&quot; [] ex-handler)\n    (GET \&quot;/async\&quot; [] ex-async-handler)\n    (POST \&quot;/json\&quot; [] ex-post-handler)\n    (not-found {:status 404})))\n\n(def reloadable-app\n    (wrap-defaults app-routes\n                   ;; https://github.com/ring-clojure/ring-defaults\n                   (assoc site-defaults\n                     ;; this is going to be behind a proxy (nginx)\n                     :proxy true\n                     ;; don't need a session\n                     :session false\n                     ;; don't need cookies\n                     :cookies false\n                     ;; don't need anti-forgery\n                     :security {:anti-forgery false}\n                     :params {:keywordize true})\n                   ))\n\n\n(def server (http/start-server #'reloadable-app {:port 8086}))&quot;, :offset 1993, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :refer [wrap-reload]]\n    [ring.middleware.keyword-params :refer [wrap-keyword-params]]\n    [ring.middleware.defaults :refer :all]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [routes GET POST DELETE ANY context]]\n    [ring.middleware.params :as params]\n    [compojure.response :refer [Renderable]]\n    [aleph.http :as http]\n    [byte-streams :as bs]\n    [manifold.stream :as s]\n    [manifold.deferred :as d]\n    [chesire.core :refer :all]\n    [clojure.core.async :as a])\n  (:gen-class))&quot;, :offset 723, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :refer [wrap-reload]]\n    [ring.middleware.keyword-params :refer [wrap-keyword-params]]\n    [ring.middleware.defaults :refer :all]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [routes GET POST DELETE ANY context]]\n    [ring.middleware.params :as params]\n    [compojure.response :refer [Renderable]]\n    [aleph.http :as http]\n    [byte-streams :as bs]\n    [manifold.stream :as s]\n    [manifold.deferred :as d]\n    [cheshire.core :refer :all]\n    [clojure.core.async :as a])\n  (:gen-class))&quot;, :offset 724, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body]}]\n  (pprint request)\n  \n  {:status 403\n   :body (-&gt; body parse-stream)})&quot;, :offset 109, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint request)\n  \n  {:status 403\n   :body (-&gt; body parse-stream)})&quot;, :offset 121, :ns &quot;http-async.core&quot;} {:command &quot;(def reloadable-app\n    (wrap-defaults app-routes\n                   ;; https://github.com/ring-clojure/ring-defaults\n                   (assoc site-defaults\n                     ;; this is going to be behind a proxy (nginx)\n                     :proxy true\n                     ;; don't need a session\n                     :session false\n                     ;; don't need cookies\n                     :cookies false\n                     ;; don't need anti-forgery\n                     :security {:anti-forgery false}\n                     :params {:keywordize true})\n                   ))&quot;, :offset 589, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body parse-stream))\n\n  {:status 403\n   :body (-&gt; body parse-stream)})&quot;, :offset 134, :ns &quot;http-async.core&quot;} {:command &quot;(ns http-async.core\n  (:require\n    [clojure.pprint :refer [pprint]]\n    [ring.middleware.reload :refer [wrap-reload]]\n    [ring.middleware.keyword-params :refer [wrap-keyword-params]]\n    [ring.middleware.defaults :refer :all]\n    [compojure.route :refer [files not-found]]\n    [compojure.handler :refer [site]]                       ; form, query params decode; cookie; session, etc\n    [compojure.core :refer [routes GET POST DELETE ANY context]]\n    [ring.middleware.params :as params]\n    [compojure.response :refer [Renderable]]\n    [aleph.http :as http]\n    [byte-streams :as bs]\n    [manifold.stream :as s]\n    [manifold.deferred :as d]\n    [cheshire.core :refer :all]\n    [clojure.core.async :as a]\n    [clojure.java.io :refer [reader writer]])\n  (:gen-class))&quot;, :offset 769, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body parse-stream))\n\n  {:status 403\n   :body (-&gt; body reader parse-stream)})&quot;, :offset 141, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body reader parse-stream))\n\n  {:status 403\n   :body (-&gt; body reader parse-stream)})&quot;, :offset 148, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body reader (parse-stream :true)))\n\n  {:status 403\n   :body (-&gt; body reader (parse-stream :true))})&quot;, :offset 164, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body reader (parse-stream :true)))\n\n  {:status 200\n   :headers {\&quot;content-type\&quot; \&quot;application/json\&quot;}\n   :body (-&gt; body reader (parse-stream :true))})&quot;, :offset 212, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body reader (parse-stream :true)))\n\n  {:status 200\n   :headers {\&quot;content-type\&quot; \&quot;application/json\&quot;}\n   :body (-&gt; body reader (parse-stream :true) generate-string)})&quot;, :offset 228, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body reader (parse-stream true)))\n\n  {:status 200\n   :headers {\&quot;content-type\&quot; \&quot;application/json\&quot;}\n   :body (-&gt; body reader (parse-stream true) generate-string)})&quot;, :offset 226, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body reader (parse-stream true)))\n\n  {:status 200\n   :headers {\&quot;content-type\&quot; \&quot;application/json\&quot;}\n   :body \&quot;'ok'\&quot;})&quot;, :offset 180, :ns &quot;http-async.core&quot;} {:command &quot;(def server (http/start-server #'reloadable-app {:port 8086}))&quot;, :offset 62, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body reader (parse-stream true)))\n  {:status 200\n   :headers {\&quot;content-type\&quot; \&quot;application/json\&quot;}\n   :body (-&gt; (doto (d/deferred) (s/success!\&quot;true\&quot;))) })&quot;, :offset 217, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body reader (parse-stream true)))\n  {:status 200\n   :headers {\&quot;content-type\&quot; \&quot;application/json\&quot;}\n   :body (-&gt; (doto (d/deferred) (d/success!\&quot;true\&quot;))) })&quot;, :offset 217, :ns &quot;http-async.core&quot;} {:command &quot;(defn ex-post-handler [{:keys [body] :as request}]\n  (pprint (-&gt; body reader (parse-stream true)))\n  {:status 200\n   :headers {\&quot;content-type\&quot; \&quot;application/json\&quot;}\n   :body (-&gt; \&quot;true\&quot; )})&quot;, :offset 185, :ns &quot;http-async.core&quot;} {:command &quot;(.close server)&quot;, :offset 15, :ns &quot;http-async.core&quot;} {:command &quot;(def server (http/start-server #'app-routes {:port 8086}))&quot;, :offset 58, :ns &quot;http-async.core&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
    </configuration>
    <configuration name="repl" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="http-async" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0168e8a2-78f0-478f-a2e0-2ab4009daab9" name="Default" comment="" />
      <created>1535028850029</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1535028850029</updated>
      <workItem from="1535028854656" duration="12355000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="12355000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="1680" y="-92" width="1920" height="1080" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Tool Output" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32997882" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="ANTLR Preview" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="LuaCheck" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32973504" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="319">
          <caret line="29" column="0" lean-forward="false" selection-start-line="29" selection-start-column="0" selection-end-line="29" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/doc/intro.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="0">
            <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
            <folding />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="143">
          <caret line="13" column="9" lean-forward="false" selection-start-line="13" selection-start-column="9" selection-end-line="13" selection-end-column="9" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="22">
            <caret line="2" column="0" lean-forward="true" selection-start-line="2" selection-start-column="0" selection-end-line="2" selection-end-column="0" />
            <folding />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/http_async/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="737">
          <caret line="67" column="2" lean-forward="false" selection-start-line="67" selection-start-column="2" selection-end-line="67" selection-end-column="60" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>